{
  "abstract" : [
    {
      "text" : "A channel for sending values from Swift Concurrency task to Combine with backpressure",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:18TinkoffConcurrency14TCAsyncChannelC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "TCAsyncChannel"
      }
    ],
    "modules" : [
      {
        "name" : "TinkoffConcurrency"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "TCAsyncChannel"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "TCAsyncChannel"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "TCAsyncChannel"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Output"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5ErrorP",
              "text" : "Error"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "TCAsyncChannel",
              "type" : "codeVoice"
            },
            {
              "text" : " class is intended to send values that can be consumed by Combine",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "respecting Combine’s backpressure mechanism. In contrast to ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/passthroughsubject",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "which would drop values if there’s no downstream demand,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "TCAsyncChannel",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/send(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " will await only when there’s at least one subscriber, and all subscribers can receive next value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/CombineBindings",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " article for details.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The usage example below illustrates how to synchronize data reads and writes using ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let channel = TCAsyncChannel<String, Error>()",
            "",
            "Task {",
            "    while let value = getValue() {",
            "        try await channel.send(value)",
            "    }",
            "",
            "    try channel.send(completion: .finished)",
            "}",
            "",
            "for await value in channel.asyncValues {",
            "    await useValue(value)",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/TinkoffConcurrency\/7Combine9PublisherP",
        "doc:\/\/TinkoffConcurrency\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/receive(subscriber:)",
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/send(_:)",
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/send(completion:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/Publisher-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/tinkoffconcurrency\/tcasyncchannel"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://TinkoffConcurrency/7Combine9PublisherP": {
  "identifier" : "doc:\/\/TinkoffConcurrency\/7Combine9PublisherP",
  "title" : "Combine.Publisher",
  "type" : "unresolvable"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency": {
  "abstract" : [
    {
      "text" : "TinkoffConcurrency is a set of tools that fill some gaps when integrating Swift Concurrency to your project.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "TinkoffConcurrency",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/CombineBindings": {
  "abstract" : [
    {
      "text" : "A bridge between Combine Publishers and Swift Concurrency",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/CombineBindings",
  "kind" : "article",
  "role" : "article",
  "title" : "Combine bindings for legacy systems",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/combinebindings"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel": {
  "abstract" : [
    {
      "text" : "A channel for sending values from Swift Concurrency task to Combine with backpressure",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TCAsyncChannel"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TCAsyncChannel"
    }
  ],
  "role" : "symbol",
  "title" : "TCAsyncChannel",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel/Publisher-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/Publisher-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Publisher Implementations",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel\/publisher-implementations"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel\/init()"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel/receive(subscriber:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "receive"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "subscriber"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/receive(subscriber:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "receive(subscriber:)",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel\/receive(subscriber:)"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel/send(_:)": {
  "abstract" : [
    {
      "text" : "Send value respecting Combine backpressure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Output"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/send(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "send(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel\/send(_:)"
},
"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCAsyncChannel/send(completion:)": {
  "abstract" : [
    {
      "text" : "Send completion.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine11SubscribersO",
      "text" : "Subscribers"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine11SubscribersO10CompletionO",
      "text" : "Completion"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCAsyncChannel\/send(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "send(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/tinkoffconcurrency\/tcasyncchannel\/send(completion:)"
},
"doc://TinkoffConcurrency/s8SendableP": {
  "identifier" : "doc:\/\/TinkoffConcurrency\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
},
"https://developer.apple.com/documentation/combine/passthroughsubject": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/passthroughsubject",
  "title" : "PassthroughSubject",
  "titleInlineContent" : [
    {
      "text" : "PassthroughSubject",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/combine\/passthroughsubject"
}
}
}